Download the Inspec debian package from the InSpec website.

wget https://packages.chef.io/files/stable/inspec/4.37.8/ubuntu/18.04/inspec_4.37.8-1_amd64.deb

Install the downloaded package.

dpkg -i inspec_4.37.8-1_amd64.deb

Create the profile

Create a new folder and cd into that folder.

mkdir cis-ubuntu

cd cis-ubuntu

Test the barebone profile
inspec init profile ubuntu --chef-license accept

Inspec Dependencies
In addition to its own controls, an InSpec profile can bring in the controls from another InSpec profile.

Additionally, when inheriting the controls of another profile, a profile can skip or even modify those included controls.

Defining the dependency
To do so, we need to specify the included profiles into the including profile’s inspec.yml file in the depends section.

For each profile to be included, a location for the profile from where to be fetched and a name for the profile should be included.

We can include different sources of the profiles such as a path, URL, GitHub, supermarkets or compliance. In this exercise, we fetch 2 profiles, the SSH baseline from GitHub via the URL and Linux Baseline from the Supermarket.

For example:

rm ubuntu/inspec.yml

cat >> ubuntu/inspec.yml <<EOL
name: profile-dependency
title: Profile with Dependencies
maintainer: InSpec Authors
copyright: InSpec Authors
copyright_email: support@chef.io
license: Apache-2.0
summary: InSpec Profile that is only consuming dependencies
version: 0.2.0
depends:
  - name: SSH baseline
    url: https://github.com/dev-sec/ssh-baseline
  - name: Linux Baseline
    supermarket: dev-sec/linux-baseline
EOL


The inspec.yml file will be read in order to source any profile dependencies when you execute a local profile. Thereafter, it will cache the dependencies locally and generate an inspec.lock file.

cd ubuntu

inspec vendor

cd ..

Run the Inspec tool to test for compliance against a server
Let’s try to run the custom profile created by us against the server. Before executing the profile we need to execute the below command to avoid being prompted with Yes or No when connecting to a server via ssh.

echo "StrictHostKeyChecking accept-new" >> ~/.ssh/config

Let’s add include_controls inside ubuntu/controls/example.rb file to make inspec able to include the dependencies in scanning.

cat >> ubuntu/controls/example.rb << EOL
# copyright: 2018, The Authors

title "sample section"

# you can also use plain tests
describe file("/tmp") do
  it { should be_directory }
end

# you add controls here
control "tmp-1.0" do                        # A unique ID for this control
  impact 0.7                                # The criticality, if this control fails.
  title "Create /tmp directory"             # A human-readable title
  desc "An optional description..."
  describe file("/tmp") do                  # The actual test
    it { should be_directory }
  end
end

include_controls 'SSH baseline'
include_controls 'Linux Baseline'
EOL



Let’s run inspec with the following options.

inspec exec ubuntu -t ssh://root@prod-p9v0d2l8 -i ~/.ssh/id_rsa --chef-license accept


-t : tells the target machine to run the profile against.
-i : provides the path where the remote machine’s ssh key is stored.
--chef-license : accept ensures that we are accepting license agreement there by preventing the inspec from prompting YES or NO question.
